version: "3.7"

services:

  mymessenger-user-manager-backend-doc:
    image: nginx:1.18.0-alpine
    container_name: mymessenger-user-manager-backend-doc
    volumes:
      - ./user-manager:/app
      - ./docker/nginx/nginx.doc.conf:/etc/nginx/conf.d/default.conf
    networks:
      - mymessenger-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.user-manager-doc.rule=Host(`user-manager.doc.mymessenger.local`)

  mymessenger-user-manager-backend-app:
    build: docker/backend
    container_name: mymessenger-user-manager-backend-app
    command: gradle bootRun
    volumes:
      - ./user-manager:/app
    networks:
      - mymessenger-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.user-manager-api.rule=Host(`user-manager.api.mymessenger.local`)

  mymessenger-user-manager-backend-db:
    image: postgres:12.2-alpine
    container_name: mymessenger-user-manager-backend-db
    environment:
      POSTGRES_USER: mymess
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: mymessenger
    volumes:
      - mymessenger-user-manager-db-config-data:/var/lib/postgresql/data
      - ./log/user-manager/backend/postgres:/log/postgresql
      - ./docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    networks:
      - mymessenger-network
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]

  mymessenger-user-manager-backend-db-admin:
    image: adminer:4.7.7
    container_name: mymessenger-user-manager-backend-db-admin
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: user-manager-db
      ADMINER_DEFAULT_DB_NAME: mymessenger
    networks:
      - mymessenger-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.user-manager-adminer.rule=Host(`user-manager.adminer.mymessenger.local`)

networks:
  mymessenger-network:
    name: mymessenger-network
    external: true

volumes:
  mymessenger-user-manager-db-config-data:

